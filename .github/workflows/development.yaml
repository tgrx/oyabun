name: Development


on:
  push:
  workflow_dispatch:


env:
  PIPENV_VENV_IN_PROJECT: '1'


jobs:

  qa:
    name: 'The code base passes all QA checks.'

    strategy:
      matrix:
        os:
          - 'macos-latest'
          - 'ubuntu-latest'
          - 'windows-latest'
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'

    runs-on: ${{ matrix.os }}

    steps:

      - name: 'üß± The code is pulled from the repository.'
        uses: actions/checkout@v2

      - name: 'üêç Python is set up.'
        uses: actions/setup-python@v2
        with:
          architecture: 'x64'
          python-version: ${{ matrix.python-version }}

      - name: '‚òÅÔ∏è The whole Python is cached.'
        id: cache-python
        uses: actions/cache@v2
        with:
          key: cache-python-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('Pipfile.lock') }}-dev
          path: ${{ env.pythonLocation }}

      - name: 'ü™õ Pipenv is installed.'
        if: ${{ !steps.cache-python.outputs.cache-hit }}
        run: |
          pip install pipenv

      - name: 'üîã The development dependencies are installed.'
        if: ${{ !steps.cache-python.outputs.cache-hit }}
        run: |
          make venv-deploy-all

      - name: 'üç∫ The code passes all QA checks'
        run: |
          make qa

      - name: 'üìù The coverage report is uploaded to codecov.io'
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          name: oyabun
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
